{"version":3,"sources":["components/Loader/Loader.styled.ts","components/Loader/Loader.tsx","components/Chat/Info/Info.styled.ts","views/VideoChat/VideoChat.styled.ts","views/VideoChat/VideoChat.tsx"],"names":["LoaderStyled","styled","div","COLORS","blue","LoaderWrapper","Loader","InfoStyled","NAV_HEADROOM","BREAKPOINTS","md","Name","InfoWrapper","NoInfo","AccountType","Email","Container","VideoChatStyled","ChatSection","VideoSection","MainVideo","video","SmallVideo","VideoInfo","Cont","Buttons","Toggle","button","mediaStreamConstraints","audio","config","iceServers","urls","mapDispatchToProps","push","connect","state","currentUser","auth","props","localStream","peerConnection","useState","localAudioActive","setLocalAudioActive","localVideoActive","setLocalVideoActive","setRemoteAudioActive","setRemoteVideoActive","isRemoteInRoom","setRemoteInRoom","user","setUser","localVideoRef","useRef","remoteVideoRef","useEffect","Profile","getUser","match","params","id","then","res","status","console","log","data","setTimeout","socket","emit","catch","err","on","gotMessageFromServer","alert","start","getWebCam","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","mediaDevices","getUserMediaSuccess","errorHandler","clearInterval","hangUp","stream","current","srcObject","isCaller","String","RTCPeerConnection","onicecandidate","gotIceCandidate","ontrack","gotRemoteStream","addStream","createOffer","createdDescription","sdp","setRemoteDescription","RTCSessionDescription","type","createAnswer","ice","addIceCandidate","RTCIceCandidate","event","candidate","description","setLocalDescription","localDescription","streams","error","getTracks","stop","forEach","track","close","ref","autoPlay","playsinline","displayName","Fragment","Avatar","url","avatar","email","accountType","onClick","tracks","getAudioTracks","i","length","enabled","toggleAudio","icon","faMicrophone","faMicrophoneSlash","getVideoTracks","toggleVideo","faVideo","faVideoSlash"],"mappings":"kmDAGO,IAAMA,EAAeC,IAAOC,IAAV,IAYHC,IAAOC,MA6ChBC,EAAgBJ,IAAOC,IAAV,KC5CXI,IAbA,WACX,OACI,kBAACD,EAAD,KACI,kBAACL,EAAD,KACI,8BACA,8BACA,8BACA,kC,miCCPT,IAAMO,EAAaN,IAAOC,IAAV,IAGQM,IAGNC,IAAYC,IAKxBC,EAAOV,IAAOC,IAAV,KAGJU,EAAcX,IAAOC,IAAV,KAIXW,EAASZ,IAAOC,IAAV,KAINY,EAAcb,IAAOC,IAAV,KAIXa,EAAQd,IAAOC,IAAV,KAILc,EAAYf,IAAOC,IAAV,M,krEC9Bf,IAAMe,EAAkBhB,IAAOC,IAAV,IAEDM,IAMFC,IAAYC,IAKxBQ,EAAcjB,IAAOC,IAAV,KAQXiB,EAAelB,IAAOC,IAAV,IASAO,IAAYC,IAKxBU,EAAYnB,IAAOoB,MAAV,KAaTC,EAAarB,IAAOoB,MAAV,IASEZ,IAAYC,IAKxBa,EAAYtB,IAAOC,IAAV,KAKTsB,EAAOvB,IAAOC,IAAV,KAIJuB,EAAUxB,IAAOC,IAAV,KAOPwB,EAASzB,IAAO0B,OAAV,IAWNxB,IAAOC,M,kECvDdwB,EAAyB,CAC3BP,OAAO,EACPQ,OAAO,GAELC,EAA2B,CAC7BC,WAAY,CAAC,CAAEC,KAAM,mCAAqC,CAAEA,KAAM,kCAkShEC,EAAqB,CACvBC,UAGWC,uBARS,SAACC,GACrB,MAAO,CAAEC,YAAaD,EAAME,KAAKD,eAOGJ,EAAzBE,EAnSG,SAACI,GACf,IAAIC,EACAC,EAF4B,EAKgBC,oBAAS,GALzB,mBAKzBC,EALyB,KAKPC,EALO,OAMgBF,oBAAS,GANzB,mBAMzBG,EANyB,KAMPC,EANO,OAQkBJ,oBAAS,GAR3B,mBAQNK,GARM,aASkBL,oBAAS,GAT3B,mBASNM,GATM,aAUUN,oBAAS,GAVnB,mBAUzBO,EAVyB,KAUTC,EAVS,OAWRR,qBAXQ,mBAWzBS,EAXyB,KAWnBC,EAXmB,KAa1BC,EAAgBC,iBAAO,MACvBC,EAAiBD,iBAAO,MAI9BE,qBAAU,WACNC,IAAQC,QAAQnB,EAAMoB,MAAMC,OAAOC,IAC9BC,MAAK,SAAAC,GACiB,MAAfA,EAAIC,QACJC,QAAQC,IAAIH,EAAII,MAChBf,EAAQW,EAAII,MAEZC,YAAW,WACPC,IAAOC,KAAK,cAAe,CAAET,GAAItB,EAAMoB,MAAMC,OAAOC,GAAIhC,MAAOc,EAAkBtB,MAAOwB,MACzF,MAEHuB,YAAW,WACP7B,EAAML,KAAK,OACZ,QAGVqC,OAAM,SAAAC,GACHJ,YAAW,WACP7B,EAAML,KAAK,OACZ,QAEXmC,IAAOI,GAAG,UAAU,SAACN,GACjBF,QAAQC,IAAIC,GACZO,EAAqBP,MAGzBE,IAAOI,GAAG,yBAAyB,SAACN,GAC5BA,EAAKN,KAAOtB,EAAMF,YAAYwB,KAC9Bd,EAAqBoB,EAAKtC,OAC1BmB,EAAqBmB,EAAK9C,WAIlCgD,IAAOI,GAAG,iBAAiB,SAACN,GACxBjB,GAAgB,GACZiB,EAAKN,KAAOtB,EAAMF,YAAYwB,KAC9Bc,MAAM,sBACNC,GAAM,IAKNT,EAAKN,KAAOtB,EAAMF,YAAYwB,KAC9Bd,EAAqBoB,EAAKtC,OAC1BmB,EAAqBmB,EAAK9C,WAIlCgD,IAAOI,GAAG,eAAe,WACrBvB,GAAgB,MAGpB,IAAI2B,EACAC,UAAUC,cACVD,UAAUE,oBACVF,UAAUG,iBACVH,UAAUG,iBACVH,UAAUI,eAEVJ,UAAUK,cAAgBL,UAAUK,aAAaJ,aACjDD,UAAUK,aACLJ,aAAanD,GACbkC,KAAKsB,GACLb,MAAMc,GAEJR,EAEPA,EAAUjD,EAAwBwD,EAAqBC,GAEvDV,MAAM,oDAEX,IAEHnB,qBAAU,WACN,OAAO,WAEH8B,cA3FY,MA4FZjB,IAAOC,KAAK,eAAgB,CAAET,GAAItB,EAAMoB,MAAMC,OAAOC,KACrD0B,QAEL,IAEH,IAAMH,EAAsB,SAACI,GACzBvB,QAAQC,IAAI,0BACZD,QAAQC,IAAIsB,GACZhD,EAAcgD,EAEdnC,EAAcoC,QAAQC,UAAYF,GAGhCZ,EAAQ,SAACe,GACX1B,QAAQC,IAAI,mBAAqB0B,OAAOD,KACxClD,EAAiB,IAAIoD,kBAAkB/D,IACxBgE,eAAiBC,EAChCtD,EAAeuD,QAAUC,EACzBxD,EAAeyD,UAAU1D,GAErBmD,GACAlD,EACK0D,cACArC,KAAKsC,GACL7B,MAAMc,IAIbX,EAAuB,SAACP,GAC1BF,QAAQC,IAAI,wBACPzB,GAAgBmC,GAAM,GAEvBT,EAAKkC,IACL5D,EACK6D,qBAAqB,IAAIC,sBAAsBpC,EAAKkC,MACpDvC,MAAK,WAEoB,UAAlBK,EAAKkC,IAAIG,MACT/D,EACKgE,eACA3C,KAAKsC,GACL7B,MAAMc,MAGlBd,MAAMc,GACJlB,EAAKuC,KACZjE,EAAekE,gBAAgB,IAAIC,gBAAgBzC,EAAKuC,MAAMnC,MAAMc,IAItEU,EAAkB,SAACc,GACrB5C,QAAQC,IAAI,qBACW,MAAnB2C,EAAMC,WACNzC,IAAOC,KAAK,cAAe,CAAEoC,IAAKG,EAAMC,UAAWjD,GAAItB,EAAMoB,MAAMC,OAAOC,MAI5EuC,EAAqB,SAACW,GACxB9C,QAAQC,IAAI,uBAEZzB,EACKuE,oBAAoBD,GACpBjD,MAAK,WACFO,IAAOC,KAAK,cAAe,CAAE+B,IAAK5D,EAAewE,iBAAkBpD,GAAItB,EAAMoB,MAAMC,OAAOC,QAE7FU,MAAMc,IAGTY,EAAkB,SAACY,GACrB5C,QAAQC,IAAI,qBAEZX,EAAekC,QAAQC,UAAYmB,EAAMK,QAAQ,IAG/C7B,EAAe,SAAC8B,GAClBlD,QAAQC,IAAIiD,IA2BV5B,GAAS,WACP/C,IACqC,qBAA1BA,EAAY4E,UAEnB5E,EAAY6E,OAEZ7E,EAAY4E,YAAYE,SAAQ,SAACC,GAC7BA,EAAMF,UAGd7E,EAAc,MAGdC,IACAA,EAAe+E,QACf/E,EAAiB,OAIzB,OACI,kBAACxB,EAAD,KACI,kBAACE,EAAD,KACKsB,EACG,kBAACrB,EAAD,CAAWqG,IAAKlE,EAAgBmE,UAAQ,EAACC,aAAW,IAEpDxE,GACI,kBAAC3B,EAAD,KACI,kBAACD,EAAD,uBAA2B4B,EAAKyE,YAAhC,OACA,kBAACtH,EAAA,EAAD,OAKZ,kBAACgB,EAAD,CAAYmG,IAAKpE,EAAeqE,UAAQ,EAACC,aAAW,KAExD,kBAACzG,EAAD,KACKiC,EACG,kBAAC,IAAM0E,SAAP,qBAEI,kBAAC,IAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,IAAK5E,EAAK6E,SAClB,kBAAC,IAAD,KAAO7E,EAAKyE,cAEhB,kBAAC,IAAD,eAAezE,EAAK8E,OACpB,kBAAC,IAAD,mBAA8C,WAArB9E,EAAK+E,YAA2B,SAAW,YAGxE,kBAAC5H,EAAA,EAAD,MAGJ,kBAACmB,EAAD,KACI,kBAACC,EAAD,CAAQyG,QAAS,kBA3Eb,WAChB,GAAK3F,EAAL,CAGAI,GAAqBD,GAErB,IADA,IAAIyF,EAAS5F,EAAY6F,iBAChBC,EAAI,EAAGA,EAAIF,EAAOG,SAAUD,EACjCF,EAAOE,GAAGE,SAAWJ,EAAOE,GAAGE,QAEnCnE,IAAOC,KAAK,uBAAwB,CAAEzC,MAAOc,EAAkBtB,MAAOwB,EAAkBgB,GAAItB,EAAMoB,MAAMC,OAAOC,MAkE5E4E,KAClB9F,EACG,kBAAC,IAAD,CAAiB+F,KAAMC,MAEvB,kBAAC,IAAD,CAAiBD,KAAME,OAG/B,kBAAClH,EAAD,CAAQyG,QAAS,kBAtEb,WAChB,GAAK3F,EAAL,CAGAM,GAAqBD,GAErB,IADA,IAAIuF,EAAS5F,EAAYqG,iBAChBP,EAAI,EAAGA,EAAIF,EAAOG,SAAUD,EACjCF,EAAOE,GAAGE,SAAWJ,EAAOE,GAAGE,QAEnCnE,IAAOC,KAAK,uBAAwB,CAAEzC,MAAOc,EAAkBtB,MAAOwB,EAAkBgB,GAAItB,EAAMoB,MAAMC,OAAOC,MA6D5EiF,KAClBjG,EACG,kBAAC,IAAD,CAAiB6F,KAAMK,MAEvB,kBAAC,IAAD,CAAiBL,KAAMM,QAInC,mDAAyBpD,OAAO3C","file":"static/js/18.96f94cdc.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { COLORS } from \"../../styles/variables\";\r\n\r\nexport const LoaderStyled = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 64px;\r\n    height: 64px;\r\n    z-index: 1000;\r\n    div {\r\n        position: absolute;\r\n        top: 27px;\r\n        width: 11px;\r\n        height: 11px;\r\n        border-radius: 50%;\r\n        background: ${COLORS.blue};\r\n        animation-timing-function: cubic-bezier(0, 1, 1, 0);\r\n    }\r\n    div:nth-child(1) {\r\n        left: 6px;\r\n        animation: lds-ellipsis1 0.6s infinite;\r\n    }\r\n    div:nth-child(2) {\r\n        left: 6px;\r\n        animation: lds-ellipsis2 0.6s infinite;\r\n    }\r\n    div:nth-child(3) {\r\n        left: 26px;\r\n        animation: lds-ellipsis2 0.6s infinite;\r\n    }\r\n    div:nth-child(4) {\r\n        left: 45px;\r\n        animation: lds-ellipsis3 0.6s infinite;\r\n    }\r\n    @keyframes lds-ellipsis1 {\r\n        0% {\r\n            transform: scale(0);\r\n        }\r\n        100% {\r\n            transform: scale(1);\r\n        }\r\n    }\r\n    @keyframes lds-ellipsis3 {\r\n        0% {\r\n            transform: scale(1);\r\n        }\r\n        100% {\r\n            transform: scale(0);\r\n        }\r\n    }\r\n    @keyframes lds-ellipsis2 {\r\n        0% {\r\n            transform: translate(0, 0);\r\n        }\r\n        100% {\r\n            transform: translate(19px, 0);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const LoaderWrapper = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`","import React from \"react\";\r\nimport { LoaderStyled, LoaderWrapper } from \"./Loader.styled\";\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <LoaderWrapper>\r\n            <LoaderStyled>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </LoaderStyled>\r\n        </LoaderWrapper>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import styled from \"styled-components\";\r\nimport { NAV_HEADROOM, BREAKPOINTS } from \"../../../styles/variables\";\r\n\r\nexport const InfoStyled = styled.div`\r\n    position: relative;\r\n    border-left: 1px solid #eee;\r\n    min-height: calc(100vh - ${NAV_HEADROOM});\r\n    padding: 0.5rem;\r\n\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        min-height: auto;\r\n    }\r\n`;\r\n\r\nexport const Name = styled.div`\r\n    margin-left: 1rem;\r\n`\r\nexport const InfoWrapper = styled.div`\r\n    \r\n`\r\n\r\nexport const NoInfo = styled.div`\r\n\r\n`\r\n\r\nexport const AccountType = styled.div`\r\n\r\n`\r\n\r\nexport const Email = styled.div`\r\n\r\n`\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`","import styled from 'styled-components'\r\nimport { NAV_HEADROOM, COLORS, BREAKPOINTS } from '../../styles/variables'\r\n\r\nexport const VideoChatStyled = styled.div`\r\n    position: relative;\r\n    height: calc(100vh - ${NAV_HEADROOM});\r\n    display: grid;\r\n    grid-template-columns: 2fr 1fr;\r\n    box-sizing: border-box;\r\n    grid-gap: 0.5rem;\r\n\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`\r\n\r\nexport const ChatSection = styled.div`\r\n    position: relative;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    border-left: 1px solid #ccc;\r\n    padding: 1rem;\r\n`\r\n\r\nexport const VideoSection = styled.div`\r\n    position: relative;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    overflow: hidden;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        width: 100%;\r\n    }\r\n`\r\n\r\nexport const MainVideo = styled.video`\r\n    position: absolute;\r\n    top: 50%; \r\n    left: 50%;\r\n    transform: translateX(-50%) translateY(-50%);\r\n    min-width: 100%; \r\n    min-height: 100%; \r\n    width: auto; \r\n    height: auto;\r\n    z-index: -1000; \r\n    overflow: hidden;\r\n`\r\n\r\nexport const SmallVideo = styled.video`\r\n    border: 1px solid #ccc;\r\n    position: absolute;\r\n    bottom: 0.5rem;\r\n    right: 0.5rem;\r\n    height: 20%;\r\n    filter: opacity(1);\r\n    background: #0f0f0f;\r\n\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        height: 25%;\r\n    }\r\n`\r\n\r\nexport const VideoInfo = styled.div`\r\n    font-weight: bold;\r\n    font-size: 1.8rem;\r\n`\r\n\r\nexport const Cont = styled.div`\r\n    \r\n`\r\n\r\nexport const Buttons = styled.div`\r\n    margin-top: 1rem;\r\n    padding-top: 1rem;\r\n    border-top: 1px solid #ddd;\r\n    display: flex;\r\n`\r\n\r\nexport const Toggle = styled.button`\r\n    border-radius: 6rem;\r\n    border: 1px solid #ddd;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 0.5rem;\r\n    width: 6rem;\r\n    height: 6rem;\r\n    font-size: 2.8rem;\r\n    background: white;\r\n    color: ${COLORS.blue};\r\n    cursor: pointer;\r\n`","import React, { useRef, useEffect, useState } from \"react\";\r\nimport {\r\n    VideoChatStyled,\r\n    VideoSection,\r\n    ChatSection,\r\n    MainVideo,\r\n    SmallVideo,\r\n    VideoInfo,\r\n    Cont,\r\n    Buttons,\r\n    Toggle\r\n} from \"./VideoChat.styled\";\r\nimport { InfoStyled, InfoWrapper, Name, NoInfo, Email, AccountType, Container } from \"../../components/Chat/Info/Info.styled\";\r\nimport { ApplicationState } from \"../../store\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { socket, Profile } from \"../../api\";\r\nimport { push } from \"connected-react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport Avatar from \"../../components/Avatar/Avatar\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faAngleDown,\r\n    faBars,\r\n    faTimes,\r\n    faMicrophoneSlash,\r\n    faMicrophone,\r\n    faVideo,\r\n    faVideoSlash\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ninterface MatchParams {\r\n    id: string;\r\n}\r\n\r\ntype Props = RouteComponentProps<MatchParams> & ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {};\r\n\r\nconst mediaStreamConstraints = {\r\n    video: true,\r\n    audio: true\r\n};\r\nconst config: RTCConfiguration = {\r\n    iceServers: [{ urls: \"stun:stun.stunprotocol.org:3478\" }, { urls: \"stun:stun.l.google.com:19302\" }]\r\n};\r\n\r\nconst VideoChat = (props: Props) => {\r\n    let localStream: any;\r\n    let peerConnection: any;\r\n    let interval: any = null;\r\n\r\n    const [localAudioActive, setLocalAudioActive] = useState(true);\r\n    const [localVideoActive, setLocalVideoActive] = useState(true);\r\n\r\n    const [remoteAudioActive, setRemoteAudioActive] = useState(false);\r\n    const [remoteVideoActive, setRemoteVideoActive] = useState(false);\r\n    const [isRemoteInRoom, setRemoteInRoom] = useState(false);\r\n    const [user, setUser] = useState();\r\n\r\n    const localVideoRef = useRef(null);\r\n    const remoteVideoRef = useRef(null);\r\n\r\n    // @ts-ignore\r\n\r\n    useEffect(() => {\r\n        Profile.getUser(props.match.params.id)\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    console.log(res.data);\r\n                    setUser(res.data);\r\n\r\n                    setTimeout(() => {\r\n                        socket.emit(\"WEBRTC_JOIN\", { id: props.match.params.id, audio: localAudioActive, video: localVideoActive });\r\n                    }, 300);\r\n                } else {\r\n                    setTimeout(() => {\r\n                        props.push(\"/\");\r\n                    }, 500);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setTimeout(() => {\r\n                    props.push(\"/\");\r\n                }, 500);\r\n            });\r\n        socket.on(\"WEBRTC\", (data: any) => {\r\n            console.log(data);\r\n            gotMessageFromServer(data);\r\n        });\r\n\r\n        socket.on(\"WEBRTC_STATUS_CHANGED\", (data: any) => {\r\n            if (data.id !== props.currentUser.id) {\r\n                setRemoteAudioActive(data.audio);\r\n                setRemoteVideoActive(data.video);\r\n            }\r\n        });\r\n\r\n        socket.on(\"WEBRTC_JOINED\", (data: any) => {\r\n            setRemoteInRoom(true);\r\n            if (data.id === props.currentUser.id) {\r\n                alert(\"SECOND USER JOINED\");\r\n                start(true);\r\n                // setTimeout(() => {\r\n                //     start(true);\r\n                // }, 200);\r\n            }\r\n            if (data.id !== props.currentUser.id) {\r\n                setRemoteAudioActive(data.audio);\r\n                setRemoteVideoActive(data.video);\r\n            }\r\n        });\r\n\r\n        socket.on(\"WEBRTC_LEFT\", () => {\r\n            setRemoteInRoom(false);\r\n        });\r\n\r\n        let getWebCam =\r\n            navigator.getUserMedia ||\r\n            navigator.webkitGetUserMedia ||\r\n            navigator.mozGetUserMedia ||\r\n            navigator.mozGetUserMedia ||\r\n            navigator.msGetUserMedia;\r\n\r\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n            navigator.mediaDevices\r\n                .getUserMedia(mediaStreamConstraints)\r\n                .then(getUserMediaSuccess)\r\n                .catch(errorHandler);\r\n            // @ts-ignore\r\n        } else if (getWebCam) {\r\n            // @ts-ignore\r\n            getWebCam(mediaStreamConstraints, getUserMediaSuccess, errorHandler);\r\n        } else {\r\n            alert(\"Your browser does not support getUserMedia API\");\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            // @ts-ignore\r\n            clearInterval(interval);\r\n            socket.emit(\"WEBRTC_LEAVE\", { id: props.match.params.id });\r\n            hangUp();\r\n        };\r\n    }, []);\r\n\r\n    const getUserMediaSuccess = (stream: any) => {\r\n        console.log(\"get user media success\");\r\n        console.log(stream);\r\n        localStream = stream;\r\n        // @ts-ignore\r\n        localVideoRef.current.srcObject = stream;\r\n    };\r\n\r\n    const start = (isCaller: boolean) => {\r\n        console.log(\"start isCaller: \" + String(isCaller));\r\n        peerConnection = new RTCPeerConnection(config);\r\n        peerConnection.onicecandidate = gotIceCandidate;\r\n        peerConnection.ontrack = gotRemoteStream;\r\n        peerConnection.addStream(localStream);\r\n\r\n        if (isCaller) {\r\n            peerConnection\r\n                .createOffer()\r\n                .then(createdDescription)\r\n                .catch(errorHandler);\r\n        }\r\n    };\r\n\r\n    const gotMessageFromServer = (data: any) => {\r\n        console.log(\"gotMessageFromServer\");\r\n        if (!peerConnection) start(false);\r\n\r\n        if (data.sdp) {\r\n            peerConnection\r\n                .setRemoteDescription(new RTCSessionDescription(data.sdp))\r\n                .then(function() {\r\n                    // Only create answers in response to offers\r\n                    if (data.sdp.type === \"offer\") {\r\n                        peerConnection\r\n                            .createAnswer()\r\n                            .then(createdDescription)\r\n                            .catch(errorHandler);\r\n                    }\r\n                })\r\n                .catch(errorHandler);\r\n        } else if (data.ice) {\r\n            peerConnection.addIceCandidate(new RTCIceCandidate(data.ice)).catch(errorHandler);\r\n        }\r\n    };\r\n\r\n    const gotIceCandidate = (event: any) => {\r\n        console.log(\"got ice candidate\");\r\n        if (event.candidate != null) {\r\n            socket.emit(\"WEBRTC_SEND\", { ice: event.candidate, id: props.match.params.id });\r\n        }\r\n    };\r\n\r\n    const createdDescription = (description: any) => {\r\n        console.log(\"created description\");\r\n\r\n        peerConnection\r\n            .setLocalDescription(description)\r\n            .then(function() {\r\n                socket.emit(\"WEBRTC_SEND\", { sdp: peerConnection.localDescription, id: props.match.params.id });\r\n            })\r\n            .catch(errorHandler);\r\n    };\r\n\r\n    const gotRemoteStream = (event: any) => {\r\n        console.log(\"got remote stream\");\r\n        // @ts-ignore\r\n        remoteVideoRef.current.srcObject = event.streams[0];\r\n    };\r\n\r\n    const errorHandler = (error: any) => {\r\n        console.log(error);\r\n    };\r\n\r\n    const toggleAudio = () => {\r\n        if (!localStream) {\r\n            return;\r\n        }\r\n        setLocalAudioActive(!localAudioActive);\r\n        let tracks = localStream.getAudioTracks();\r\n        for (var i = 0; i < tracks.length; ++i) {\r\n            tracks[i].enabled = !tracks[i].enabled;\r\n        }\r\n        socket.emit(\"WEBRTC_CHANGE_STATUS\", { audio: localAudioActive, video: localVideoActive, id: props.match.params.id });\r\n    };\r\n\r\n    const toggleVideo = () => {\r\n        if (!localStream) {\r\n            return;\r\n        }\r\n        setLocalVideoActive(!localVideoActive);\r\n        let tracks = localStream.getVideoTracks();\r\n        for (var i = 0; i < tracks.length; ++i) {\r\n            tracks[i].enabled = !tracks[i].enabled;\r\n        }\r\n        socket.emit(\"WEBRTC_CHANGE_STATUS\", { audio: localAudioActive, video: localVideoActive, id: props.match.params.id });\r\n    };\r\n\r\n    const hangUp = () => {\r\n        if (localStream) {\r\n            if (typeof localStream.getTracks === \"undefined\") {\r\n                // Support legacy browsers, like phantomJs we use to run tests.\r\n                localStream.stop();\r\n            } else {\r\n                localStream.getTracks().forEach((track: any) => {\r\n                    track.stop();\r\n                });\r\n            }\r\n            localStream = null;\r\n        }\r\n\r\n        if (peerConnection) {\r\n            peerConnection.close();\r\n            peerConnection = null;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <VideoChatStyled>\r\n            <VideoSection>\r\n                {peerConnection ? (\r\n                    <MainVideo ref={remoteVideoRef} autoPlay playsinline></MainVideo>\r\n                ) : (\r\n                    user && (\r\n                        <Cont>\r\n                            <VideoInfo>Oczekiwanie na {user.displayName}...</VideoInfo>\r\n                            <Loader></Loader>\r\n                        </Cont>\r\n                    )\r\n                )}\r\n\r\n                <SmallVideo ref={localVideoRef} autoPlay playsinline></SmallVideo>\r\n            </VideoSection>\r\n            <ChatSection>\r\n                {user ? (\r\n                    <React.Fragment>\r\n                        Chat wideo z:\r\n                        <Container>\r\n                            <Avatar url={user.avatar}></Avatar>\r\n                            <Name>{user.displayName}</Name>\r\n                        </Container>\r\n                        <Email>Email: {user.email}</Email>\r\n                        <AccountType>Typ konta: {user.accountType === \"doctor\" ? \"lekarz\" : \"pacjent\"}</AccountType>\r\n                    </React.Fragment>\r\n                ) : (\r\n                    <Loader></Loader>\r\n                )}\r\n\r\n                <Buttons>\r\n                    <Toggle onClick={() => toggleAudio()}>\r\n                        {localAudioActive ? (\r\n                            <FontAwesomeIcon icon={faMicrophone}></FontAwesomeIcon>\r\n                        ) : (\r\n                            <FontAwesomeIcon icon={faMicrophoneSlash}></FontAwesomeIcon>\r\n                        )}\r\n                    </Toggle>\r\n                    <Toggle onClick={() => toggleVideo()}>\r\n                        {localVideoActive ? (\r\n                            <FontAwesomeIcon icon={faVideo}></FontAwesomeIcon>\r\n                        ) : (\r\n                            <FontAwesomeIcon icon={faVideoSlash}></FontAwesomeIcon>\r\n                        )}\r\n                    </Toggle>\r\n                </Buttons>\r\n                <div>is remote in room: {String(isRemoteInRoom)}</div>\r\n\r\n                {/* <div>local audio: {String(localAudioActive)}</div>\r\n                <div>local video: {String(localVideoActive)}</div> */}\r\n                {/* <div>remote audio: {String(remoteAudioActive)}</div>\r\n                <div>remote video: {String(remoteVideoActive)}</div>\r\n                <div>is remote in room: {String(isRemoteInRoom)}</div>\r\n                <FormGroup>\r\n                    <LabelStyled>remote audio</LabelStyled>\r\n                    <input type=\"checkbox\" checked={remoteAudioActive} disabled/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <LabelStyled>remote vido</LabelStyled>\r\n                    <input type=\"checkbox\" checked={remoteVideoActive} disabled/>\r\n                </FormGroup> */}\r\n            </ChatSection>\r\n        </VideoChatStyled>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: ApplicationState) => {\r\n    return { currentUser: state.auth.currentUser };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    push\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoChat);\r\n"],"sourceRoot":""}